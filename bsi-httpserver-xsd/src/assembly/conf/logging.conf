# Properties file which configures the operation of the JDK 
# logging facility.

# Global logging properties. 
# ------------------------------------------ 
# The set of handlers to be loaded upon startup. 
# Comma-separated list of class names. 
# (? LogManager docs say no comma here, but JDK example has comma.) 
#handlers=java.util.logging.FileHandler, java.util.logging.ConsoleHandler
#--------------------------------------------
# Setar a saida dos logs no console
#--------------------------------------------
handlers=java.util.logging.ConsoleHandler
#--------------------------------------------

#--------------------------------------------
# Default global logging level. 
# Loggers and Handlers may override this level 
#--------------------------------------------
# Setar o nivel de log para a aplicacao toda
#--------------------------------------------
.level=INFO
#--------------------------------------------

# Loggers 
# ------------------------------------------ 
# Loggers are usually attached to packages. 
# Here, the level for each package is specified. 
# The global level is used by default, so levels 
# specified here simply act as an override. 
#--------------------------------------------
# Setar o Nivel de Log por Pacote(Package)
#--------------------------------------------
org.catolicasc.level=FINE 
#--------------------------------------------

# Handlers 
# -----------------------------------------



#--------------------------------------------
# Setar os tipos de Saida e seus formatos
#--------------------------------------------
# --- ConsoleHandler --- 
# Override of global logging level 
#java.util.logging.ConsoleHandler.level=ALL
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter


# --- FileHandler --- 
# Override of global logging level 
#java.util.logging.FileHandler.level=ALL

# Naming style for the output file: 
# (The output file is placed in the directory 
# defined by the "user.home" System property.) 
#java.util.logging.FileHandler.pattern=%h/java%u.log

# Limiting size of output file in bytes: 
#java.util.logging.FileHandler.limit=50000

# Number of output files to cycle through, by appending an 
# integer to the base file name: 
#java.util.logging.FileHandler.count=1

# Style of output (Simple or XML): 
#java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter

